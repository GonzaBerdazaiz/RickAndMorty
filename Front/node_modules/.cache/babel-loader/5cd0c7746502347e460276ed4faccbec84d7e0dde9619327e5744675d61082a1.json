{"ast":null,"code":"const validation = (userData, errors, setErrors, setFormValid) => {\n  let validUsername = true;\n  let validPassword = true;\n  // username\n  if (!userData.username) {\n    setErrors({\n      ...errors,\n      username: \"Por favor completa este campo\"\n    });\n  } else if (userData.username.length > 35) {\n    setErrors({\n      ...errors,\n      username: \"No puede superar los 35 caracteres\"\n    });\n  } else if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{3})+$/.test(userData.username)) {\n    setErrors({\n      ...errors,\n      username: \"Email inválido\"\n    });\n  } else {\n    setErrors({\n      ...errors,\n      username: \"\"\n    });\n  }\n\n  // password\n  if (userData.password.length < 6 || userData.password.length > 10) {\n    setErrors({\n      ...errors,\n      password: \"Longitud de password inválida\"\n    });\n  } else if (!/\\d/.test(userData.password)) {\n    setErrors({\n      ...errors,\n      password: \"Debe contener al menos un número\"\n    });\n  } else {\n    setErrors({\n      ...errors,\n      password: \"\"\n    });\n  }\n  if (errors.username || errors.password) {\n    return false;\n  } else {\n    return true;\n  }\n};\nexport default validation;","map":{"version":3,"names":["validation","userData","errors","setErrors","setFormValid","validUsername","validPassword","username","length","test","password"],"sources":["C:/Users/gonza/Desktop/rick_and_morty/Front/src/components/Form/Validaciones.jsx"],"sourcesContent":["const validation = (userData, errors, setErrors, setFormValid) => {\r\n  let validUsername = true;\r\n  let validPassword = true;\r\n  // username\r\n  if (!userData.username) {\r\n    setErrors({ ...errors, username: \"Por favor completa este campo\" });\r\n  } else if (userData.username.length > 35) {\r\n    setErrors({ ...errors, username: \"No puede superar los 35 caracteres\" });\r\n  } else if (\r\n    !/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{3})+$/.test(userData.username)\r\n  ) {\r\n    setErrors({ ...errors, username: \"Email inválido\" });\r\n  } else {\r\n    setErrors({ ...errors, username: \"\" });\r\n  }\r\n\r\n  // password\r\n  if (userData.password.length < 6 || userData.password.length > 10) {\r\n    setErrors({ ...errors, password: \"Longitud de password inválida\" });\r\n  } else if (!/\\d/.test(userData.password)) {\r\n    setErrors({ ...errors, password: \"Debe contener al menos un número\" });\r\n  } else {\r\n    setErrors({ ...errors, password: \"\" });\r\n  }\r\n\r\n  if (errors.username || errors.password) {\r\n    return false;\r\n  } else {\r\n    return true;\r\n  }\r\n};\r\n\r\nexport default validation;\r\n"],"mappings":"AAAA,MAAMA,UAAU,GAAGA,CAACC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,EAAEC,YAAY,KAAK;EAChE,IAAIC,aAAa,GAAG,IAAI;EACxB,IAAIC,aAAa,GAAG,IAAI;EACxB;EACA,IAAI,CAACL,QAAQ,CAACM,QAAQ,EAAE;IACtBJ,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAEK,QAAQ,EAAE;IAAgC,CAAC,CAAC;EACrE,CAAC,MAAM,IAAIN,QAAQ,CAACM,QAAQ,CAACC,MAAM,GAAG,EAAE,EAAE;IACxCL,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAEK,QAAQ,EAAE;IAAqC,CAAC,CAAC;EAC1E,CAAC,MAAM,IACL,CAAC,6CAA6C,CAACE,IAAI,CAACR,QAAQ,CAACM,QAAQ,CAAC,EACtE;IACAJ,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAEK,QAAQ,EAAE;IAAiB,CAAC,CAAC;EACtD,CAAC,MAAM;IACLJ,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAEK,QAAQ,EAAE;IAAG,CAAC,CAAC;EACxC;;EAEA;EACA,IAAIN,QAAQ,CAACS,QAAQ,CAACF,MAAM,GAAG,CAAC,IAAIP,QAAQ,CAACS,QAAQ,CAACF,MAAM,GAAG,EAAE,EAAE;IACjEL,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAEQ,QAAQ,EAAE;IAAgC,CAAC,CAAC;EACrE,CAAC,MAAM,IAAI,CAAC,IAAI,CAACD,IAAI,CAACR,QAAQ,CAACS,QAAQ,CAAC,EAAE;IACxCP,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAEQ,QAAQ,EAAE;IAAmC,CAAC,CAAC;EACxE,CAAC,MAAM;IACLP,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAEQ,QAAQ,EAAE;IAAG,CAAC,CAAC;EACxC;EAEA,IAAIR,MAAM,CAACK,QAAQ,IAAIL,MAAM,CAACQ,QAAQ,EAAE;IACtC,OAAO,KAAK;EACd,CAAC,MAAM;IACL,OAAO,IAAI;EACb;AACF,CAAC;AAED,eAAeV,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}