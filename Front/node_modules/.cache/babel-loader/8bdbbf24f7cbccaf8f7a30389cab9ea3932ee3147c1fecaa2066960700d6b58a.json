{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gonza\\\\Desktop\\\\rick_and_morty\\\\Front\\\\src\\\\components\\\\Form\\\\Form.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport style from \"./Form.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = () => {\n  _s();\n  const [form, setForm] = useState({\n    usernam: \"\",\n    password: \"\"\n  });\n  const handleChange = event => {\n    //recibe el evento y asi modificamos el estado\n    const property = event.target.name;\n    const value = event.target.value;\n    setForm({\n      ...form,\n      [property]: value\n    }); //lo que ya tiene form. lo que quiero modificar esta en property y le damos value. o lo de abajo\n    //   if (property === \"username\") {\n    //   setForm({ ...form, username: value });\n    // }\n    // if (property === \"password\") {\n    //   setForm({ ...form, username: value });\n    // }\n  };\n\n  const submitHandler = event => {\n    // si no hacemos esta funcion, se recarga la pagina y perdemos lo que cargamos en el estado\n    event.preventDefault(); //para que no recargue la pagina\n    alert(\"LOGIN EXITOSO\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    className: style.Container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: style.Title,\n      children: \" Iniciar Sesion\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: style.User,\n        htmlFor: \"username\",\n        children: \"Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: style.Input1,\n        type: \"text\",\n        name: \"username\",\n        value: form.username //para que lo ingresado modifique el estado\n        ,\n        onChange: handleChange // para poder modificar el estado.\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: style.Pass,\n        htmlFor: \"password\",\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: style.Input2,\n        type: \"text\",\n        name: \"password\",\n        value: form.password,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: style.Boton,\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"nLCAp4dCUzOAoxrJV6biX9Pv/k4=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useState","style","jsxDEV","_jsxDEV","Form","_s","form","setForm","usernam","password","handleChange","event","property","target","name","value","submitHandler","preventDefault","alert","onSubmit","className","Container","children","Title","fileName","_jsxFileName","lineNumber","columnNumber","User","htmlFor","Input1","type","username","onChange","Pass","Input2","Boton","_c","$RefreshReg$"],"sources":["C:/Users/gonza/Desktop/rick_and_morty/Front/src/components/Form/Form.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport style from \"./Form.module.css\";\r\n\r\n\r\n\r\nconst Form = () => {\r\n  const [form, setForm] = useState({ usernam: \"\", password: \"\" });\r\n\r\n  const handleChange = (event) => {\r\n    //recibe el evento y asi modificamos el estado\r\n    const property = event.target.name;\r\n    const value = event.target.value;\r\n\r\n    setForm({ ...form, [property]: value }); //lo que ya tiene form. lo que quiero modificar esta en property y le damos value. o lo de abajo\r\n    //   if (property === \"username\") {\r\n    //   setForm({ ...form, username: value });\r\n    // }\r\n    // if (property === \"password\") {\r\n    //   setForm({ ...form, username: value });\r\n    // }\r\n    };\r\n    \r\n    const submitHandler = (event) => { // si no hacemos esta funcion, se recarga la pagina y perdemos lo que cargamos en el estado\r\n        event.preventDefault(); //para que no recargue la pagina\r\n        alert(\"LOGIN EXITOSO\");\r\n    }\r\n\r\n  return (\r\n    <form onSubmit={submitHandler} className={style.Container}>\r\n      <h1 className={style.Title}> Iniciar Sesion</h1>\r\n      <div>\r\n        <label className={style.User} htmlFor=\"username\">\r\n          Username:\r\n        </label>\r\n        <input\r\n          className={style.Input1}\r\n          type=\"text\"\r\n          name=\"username\"\r\n          value={form.username} //para que lo ingresado modifique el estado\r\n          onChange={handleChange} // para poder modificar el estado.\r\n        />\r\n      </div>\r\n      <div>\r\n        <label className={style.Pass} htmlFor=\"password\">\r\n          Password:\r\n        </label>\r\n        <input\r\n          className={style.Input2}\r\n          type=\"text\"\r\n          name=\"password\"\r\n          value={form.password}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <button className={style.Boton} type=\"submit\">\r\n        Login\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}