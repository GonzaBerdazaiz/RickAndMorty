{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gonza\\\\Desktop\\\\rick_and_morty\\\\Front\\\\src\\\\components\\\\SearchBar\\\\SearchBar.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport style from \"./Search.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchBar(props) {\n  _s();\n  const [id, setId] = useState(\"\"); // esto es para que guarde la informacion que ingresa por el input\n\n  const handleChange = event => {\n    //c/v que tipeamos en input, ejecutamos esta funcion que recibe evento y \n    setId(event.target.value); //event.target es el input y el \n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.Barra,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: style.Busqueda,\n      type: \"search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: style.Boton,\n      onClick: id => {\n        props.onSearch(id);\n      },\n      children: \"Agregar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchBar, \"4S2lHYDXZu1kPqeM+OaM1T6vczM=\");\n_c = SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["useState","style","jsxDEV","_jsxDEV","SearchBar","props","_s","id","setId","handleChange","event","target","value","className","Barra","children","Busqueda","type","fileName","_jsxFileName","lineNumber","columnNumber","Boton","onClick","onSearch","_c","$RefreshReg$"],"sources":["C:/Users/gonza/Desktop/rick_and_morty/Front/src/components/SearchBar/SearchBar.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport style from \"./Search.module.css\";\r\n\r\nexport default function SearchBar(props) {\r\n  const [id, setId] = useState(\"\"); // esto es para que guarde la informacion que ingresa por el input\r\n\r\n  const handleChange = (event) => {  //c/v que tipeamos en input, ejecutamos esta funcion que recibe evento y \r\n    setId(event.target.value);  //event.target es el input y el \r\n  };\r\n\r\n  return (\r\n    <div className={style.Barra}>\r\n      <input className={style.Busqueda} type=\"search\" />\r\n      <button\r\n        className={style.Boton}\r\n        onClick={(id) => {\r\n          props.onSearch(id);\r\n        }}\r\n      >\r\n        Agregar\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,SAASA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACvC,MAAM,CAACC,EAAE,EAAEC,KAAK,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAElC,MAAMS,YAAY,GAAIC,KAAK,IAAK;IAAG;IACjCF,KAAK,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAE;EAC9B,CAAC;;EAED,oBACET,OAAA;IAAKU,SAAS,EAAEZ,KAAK,CAACa,KAAM;IAAAC,QAAA,gBAC1BZ,OAAA;MAAOU,SAAS,EAAEZ,KAAK,CAACe,QAAS;MAACC,IAAI,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAClDlB,OAAA;MACEU,SAAS,EAAEZ,KAAK,CAACqB,KAAM;MACvBC,OAAO,EAAGhB,EAAE,IAAK;QACfF,KAAK,CAACmB,QAAQ,CAACjB,EAAE,CAAC;MACpB,CAAE;MAAAQ,QAAA,EACH;IAED;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACL;AAEV;AAACf,EAAA,CApBuBF,SAAS;AAAAqB,EAAA,GAATrB,SAAS;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}